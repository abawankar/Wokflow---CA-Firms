@{
    ViewBag.Title = "Pending Task";
}

<div class="panel panel-info">
    <div class="panel-heading">

        <a id="refresh" style="padding-top:8px;" class="pull-right" href="#">
            <span id="spin" class="glyphicon glyphicon-refresh"></span>
        </a>

        @Html.ActionLink("Dashboard", "Index", "Home") |
        FY @Html.DropDownList("fy", new SelectList((ViewBag.fy) as SelectList, "Value", "Text"), new { @class = "search-box" })
        @Html.DropDownList("tasktype", new SelectList((ViewBag.tasktype) as SelectList, "Value", "Text"), "Task Types", new { @class = "search-box" })
        @Html.DropDownList("client", new SelectList((ViewBag.client) as SelectList, "Value", "Text"), "All Clients", new { @class = "search-box" })
        <button id="search" type="button" class="btn btn-info btn-sm">
            <span class="glyphicon glyphicon-search"></span> Search
        </button>
    </div>
    <div class="panel-body">
        <div id="table"></div>
    </div>
</div>

<style type="text/css">
    .cursor {
        cursor: pointer;
    }
</style>

<script type="text/javascript">
    $(document).ready(function () {

        $('#table').jtable({
            title: 'Pending Task',
            paging: true,
            pagesize: 3,
            actions: {
                listAction: '@Url.Action("List")',
            },
            fields: {
                Id: {
                    title: 'Id',
                    width:'1%',
                    key: true,
                    create: false,
                    edit: false,
                    list: false
                },
                FY: {
                    title: 'FY',
                    width: '2%',
                },
                FileNumber: {
                    title: 'TaskNo',
                    width: '2%',
                },
                TaskTypeId: {
                    title: 'TaskTypes',
                    width: '4%',
                    options: '@Url.Action("GetTaskTypesOptions", "TaskTypes")',
                },
                ClientId: {
                    title: 'Client',
                    width: '4%',
                    options: '@Url.Action("GetClientsOptions", "Clients")',
                },
                Received: {
                    title: 'Received',
                    width: '2%',
                    type: 'date',
                    display: function (data) {
                        if (data.record.Received != null)
                            return moment(data.record.Received).format('DD/MMM/YYYY')
                    },
                },
                DueDate: {
                    title: 'DueDate',
                    width: '2%',
                    type: 'date',
                    display: function (data) {
                        if (data.record.DueDate != null)
                            return moment(data.record.DueDate).format('DD/MMM/YYYY')
                    },
                },
                Completed: {
                    title: 'Completed',
                    width: '2%',
                    type: 'date',
                    create:false,
                    display: function (data) {
                        if (data.record.Completed != null)
                            return moment(data.record.Completed).format('DD/MMM/YYYY')
                    },
                },
                Cost: {
                    title: 'Cost',
                    width: '2%',
                    display: function (data) {
                        if (data.record.Cost != 0 || data.record.Cost != null)
                            return '<div style="float:right;">' + addCommas(data.record.Cost.toFixed(2)) + '</div>'
                        else
                            return 0;
                    }
                },
                BillStatus: {
                    title: 'Billing',
                    width: '0.1%',
                    options: { '1': 'Pending', '2': 'Done' },
                    defaultValue: '1',
                    display: function (data) {
                        if (data.record.BillStatus == 1)
                            return "<div class='red'>" + 'Pending' + "</div>";
                        if (data.record.BillStatus == 2)
                            return "<div class='green'>" + 'Done' + "</div>";
                    },
                },
                FilingStatus: {
                    title: 'Filing',
                    width: '0.1%',
                    options: { '1': 'Pending', '2': 'Done' },
                    defaultValue: '1',
                    display: function (data) {
                        if (data.record.FilingStatus == 1)
                            return "<div class='red'>" + 'Pending' + "</div>";
                        if (data.record.FilingStatus == 2)
                            return "<div class='green'>" + 'Done' + "</div>";
                    },
                },
                PaymentStatus: {
                    title: 'Payment',
                    width: '0.1%',
                    options: { '1': 'Pending', '2': 'Paid' },
                    defaultValue: '1',
                    display: function (data) {
                        if (data.record.PaymentStatus == 1)
                            return "<div class='red'>" + 'Pending' + "</div>";
                        if (data.record.PaymentStatus == 2)
                            return "<div class='green'>" + 'Paid' + "</div>";
                    },
                },
                OfficeFileNo: {
                    title: 'OfficeFileNo',
                    width: '1%',
                },
                Status: {
                    title: 'Status',
                    width: '0.1%',
                    options: { '1': 'Running', '2': 'Done', '3': 'Cancelled', '4': 'Closed' },
                    defaultValue: '1',
                    display: function (data) {
                        if (data.record.Status == 1)
                            return "<div class='blue'>" + 'RUN' + "</div>";
                        if (data.record.Status == 2)
                            return "<div class='green'>" + 'Done' + "</div>";
                        if (data.record.Status == 3)
                            return "<div class='red'>" + 'CAN' + "</div>";
                        if (data.record.Status == 4)
                            return "<div class='yellow'>" + 'Closed' + "</div>";
                    },
                },
            },
            toolbar: {
                items: [{
                    icon: '/Content/Images/pdf.png',
                    text: 'Export',
                    click: function () {
                        var url = 'PendingTask/Export';
                        window.open(url);
                    }
                }]
            },
        });
        $('#table').jtable('load');

        $("#refresh").click(function (e) {
            $('#client').val('');
            $('#fy').val('');
            $('#tasktype').val('')
            $("#spin").addClass("spin");
            e.preventDefault();
            $('#table').jtable('load');
            $("#spin").removeClass("spin");
        });
        $("#search").click(function (e) {
            e.preventDefault();
            $('#table').jtable('load', {
                name: $('#name').val(), client: $('#client').val(), tasktype: $('#tasktype').val(), fy: $('#fy').val()
            });
        });
    });
</script>
